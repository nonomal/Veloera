name: Publish Docker images

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false

jobs:
  push_to_registries:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Save version info
        run: |
          git describe --tags > VERSION

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use buildx driver with multiple concurrent builders
          driver-opts: |
            network=host
          # Enable BuildKit cache
          buildkitd-flags: --debug

      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ !endsWith(github.ref, '-alpha') && !endsWith(github.ref, '-beta') }}
            type=raw,value=alpha,enable=${{ endsWith(github.ref, '-alpha') }}
            type=raw,value=beta,enable=${{ endsWith(github.ref, '-beta') }}
          flavor: |
            suffix=-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use GitHub Actions cache for better performance
          cache-from: type=gha,scope=build-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.platform }}
          # Optimize build performance
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Set output to suppress verbose logs
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Docker image for ${{ github.repository }}

  merge_manifests:
    name: Create multi-arch manifest
    runs-on: ubuntu-latest
    needs: push_to_registries
    permissions:
      packages: write
      contents: read
    steps:
      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ !endsWith(github.ref, '-alpha') && !endsWith(github.ref, '-beta') }}
            type=raw,value=alpha,enable=${{ endsWith(github.ref, '-alpha') }}
            type=raw,value=beta,enable=${{ endsWith(github.ref, '-beta') }}

      - name: Create and push multi-arch manifest
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          for TAG in $TAGS; do
            docker buildx imagetools create -t $TAG \
              ${TAG}-amd64 \
              ${TAG}-arm64
          done